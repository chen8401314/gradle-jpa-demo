/*plugins {
    id 'nu.studer.jooq' version '8.0'
}*/
dependencies {
    implementation project(":entity")
    //implementation files(project(':entity').sourceSets.main.output.classesDirs)
    implementation("org.springframework:spring-context")
    implementation("mysql:mysql-connector-java:8.0.15")
    implementation("org.springframework.boot:spring-boot-starter-tomcat")
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("io.springfox:springfox-swagger2:2.9.2")
    implementation("io.springfox:springfox-swagger-ui:2.9.2")


   // implementation 'org.springdoc:springdoc-openapi-ui:1.6.13'
    implementation("org.mapstruct:mapstruct:${mapstructVersion}")
    implementation("org.mapstruct:mapstruct-jdk8:${mapstructVersion}")
    implementation("org.springframework.boot:spring-boot-starter-jooq:")


    //implementation("jakarta.persistence:jakarta.persistence-api:2.2.3")
    /*  implementation 'jakarta.xml.bind:jakarta.xml.bind-api:3.0.1'
      implementation 'org.glassfish.jaxb:jaxb-runtime:3.0.1'*/

//    runtime("com.h2database:h2:${h2Version}")
   // jooqRuntime files(project(':entity').sourceSets.main.output.classesDirs)
    jooqRuntime project(":entity")


//    testCompile("junit:junit:${junitVersion}")
    //   testCompile("org.jmockit:jmockit:${jmockitVersion}")


}


jooq {
    jooqGen(sourceSets.main) {
        generator {
            database {
                properties {
                    property {
                        key = "packages"
                        value = "com.example.demo.entity"
                    }
                }
            }
            target {
                packageName = 'com.example.demo.jooq'
            }
        }
    }
}

generateJooqGenJooqSchemaSource.enabled = true
